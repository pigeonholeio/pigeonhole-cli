
version: 2
project_name: PigeonHole Cli
# dockers:
# - dockerfile: Dockerfile
  # id: pigeonhole-cli
  # # binaries:
  # # - pigeonhole-cli
  # # goos: linux
  # # goarch: amd64
  # # goarm: ''
  # # goamd64: 'v2'
  # skip_push: true
  # image_templates:
  #   - "pigeonholeio/pigeonhole-cli:latest"
# sboms:
#   - artifacts: binary
    # documents:
    #   - "${artifact}.spdx.sbom"
# archives:
#   - format: gz
#     files:
#       - none*
archives:
- format: tar.gz
  format_overrides:
  - # Which GOOS to override the format for.
    goos: windows

    # The format to use for the given GOOS.
    # Valid options are `tar.gz`, `tgz`, `tar.xz`, `txz`, tar`, `gz`, `zip`, `binary`, and `none`.
    format: zip
# signs:
#   - artifacts: all
report_sizes: false
metadata:
  mod_timestamp: "{{ .CommitTimestamp }}"
builds:
  - id: default
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    no_unique_dist_dir: true
    dir: src
    main: .
    binary: "pigeonhole-cli/{{ .Version }}/{{ .Os }}/{{ .Arch }}/pigeonhole"
    # binary: pigeonhole
    builder: go
    gobinary: go
    command: build
    ldflags:
      - -X github.com/pigeonholeio/pigeonhole-cli/cmd.Version={{.Version}}
      - -X github.com/pigeonholeio/pigeonhole-cli/cmd.CommitHash={{.ShortCommit}}
      - -X github.com/pigeonholeio/pigeonhole-cli/cmd.BuildTime={{.Date}}
      - -X github.com/pigeonholeio/pigeonhole-cli/cmd.BuiltBy=goreleaser
    env:
      - CGO_ENABLED=0


brews:
  - name: pigeonhole-cli

    repository:
      # Repository owner template. (templateable)
      owner: pigeonholeio
      # Repository name. (templateable)
      name: homebrew-pigeonhole
      # Optionally a branch can be provided. (templateable)
      #
      # Defaults to the default repository branch.
      branch: main
      git:
        private_key: /Users/server/.ssh/id_rsa
# blobs:
#   # You can have multiple blob configs
#   - provider: s3
#     region: eu-west-2
#     bucket: releases.pigeono.io
#     ids:
#     - default
#     include_meta: false
#     directory: "pigeonhole-cli"
#     # directory: "pigeonhole-cli/{{ .Version }}/{{ .Os }}/{{ .Arch }}"
    



# winget:
#   - # Name of the recipe
#     #
#     # Default: the project name.
#     # Templates: allowed.
#     name: pigeonhole-cli

#     # Publisher name.
#     #
#     # Templates: allowed.
#     # Required
#     publisher: PigeonHole

#     # Your app's description.
#     #
#     # Templates: allowed.
#     # Required
#     # Default: inferred from global metadata.
#     short_description: "Software to create fast and easy drum rolls."



checksum:
  name_template: '{{ .ProjectName }}_{{ .Version }}_checksums.txt'
  algorithm: sha256

# source:
#   name_template: '{{ .ProjectName }}-{{ .Version }}'
#   format: tar.gz
gomod:
  gobinary: go

changelog:
  sort: desc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^updaated'

release:
  github:
    owner: pigeonholeio
    name: pigeonhole-cli
  name_template: "{{.ProjectName}} v{{.Version}}"

  draft: false
  # replace_existing_draft: false
  # replace_existing_artifacts: true
  # use_existing_draft: true
  mode: replace
  header: |
    # ðŸš€ A new PigeonHole CLI release
    You can find the binaries at [https://releases.pigeono.io](https://releases.pigeono.io)

  footer: |
    ## Thanks for supporting,

    Those were the changes on {{ .Tag }}!
    Don't forget if you like the tool and would like to help, there are several ways you can [help the project](https://pigeono.io/about/getinvolved/)
    

  skip_upload: true


  disable: false
